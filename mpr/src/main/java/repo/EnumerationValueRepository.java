package repo;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;

import domain.EnumerationValue;
import map.IMaper;
import uow.IUnitOfWork;

public class EnumerationValueRepository extends RepoBase<EnumerationValue>  implements IEnumerationValueRepository {

	public EnumerationValueRepository(Connection connection, IMaper<EnumerationValue> mapper, IUnitOfWork uow) {
		super(connection,mapper, uow);
	}
	
	
	public void setUpdateQuery(EnumerationValue eV) throws SQLException {
		update.setInt(1, eV.getIntKey());
		update.setString(2, eV.getStringKey());
		update.setString(3, eV.getValue());
		update.setString(4, eV.getEnumerationName());
		update.setInt(5, eV.getId());
	}

	public void setInsertQuery(EnumerationValue eV) throws SQLException {
		insert.setInt(1, eV.getIntKey());
		insert.setString(2, eV.getStringKey());
		insert.setString(3, eV.getValue());
		insert.setString(4, eV.getEnumerationName());
		
	}


	protected String tableName() {
		return "t_sys_enums";
	}
	
	protected String createTableSql() {
		return "CREATE TABLE t_sys_enums("
				+ "id bigint GENERATED BY DEFAULT AS IDENTITY,"
			//	+"id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY,"
				+ "intKey VARCHAR(20)," 
				+ "StringKey VARCHAR(20)," 
				+ "evalue VARCHAR(20)," 
				+ "enumerationName VARCHAR(20)"+ ")";
	}
	
	protected String insertSql() {
		return "INSERT INTO t_sys_enums(intKey,StringKey, evalue, enumerationName) VALUES (?,?,?,?)";
	}

	protected String updateSql() {
		return "UPDATE t_sys_enums SET intKey=?, StringKey=?, evalue = ?, enumerationName = ? WHERE id = ?";
	}


	public List<EnumerationValue> withName(String name) {
		// TODO Auto-generated method stub
		return null;
	}


	public List<EnumerationValue> withIntKey(int key, String name) {
		// TODO Auto-generated method stub
		return null;
	}


	public List<EnumerationValue> withStringKey(String key, String name) {
		// TODO Auto-generated method stub
		return null;
	}

	
	
	
}
